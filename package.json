{
    "name": "motriforge",
    "version": "0.1.0",
    "private": true,
    "type": "module",
    "scripts": {
        "dev": "concurrently \"npm run dev:api\" \"npm run dev:frontend\"",
        "dev:all": "concurrently \"npm run dev:api\" \"npm run dev:frontend\" \"npm run dev:services\"",
        "dev:frontend": "vite --config frontend/vite.config.ts",
        "dev:api": "tsx watch api/src/main.ts",
        "dev:services": "concurrently -k \"npm run dev:auth\" \"npm run dev:user\" \"npm run dev:exercise\" \"npm run dev:workout\" \"npm run dev:program\" \"npm run dev:media\" \"npm run dev:cache\" \"npm run dev:audit\"",
        "dev:core-services": "concurrently -k \"npm run dev:auth\" \"npm run dev:user\" \"npm run dev:exercise\" \"npm run dev:workout\"",
        "dev:support-services": "concurrently -k \"npm run dev:media\" \"npm run dev:cache\" \"npm run dev:audit\" \"npm run dev:error\" \"npm run dev:notification\"",
        "dev:auth": "tsx watch services/auth-service/src/index.ts",
        "dev:user": "tsx watch services/user-service/src/index.ts",
        "dev:exercise": "tsx watch services/exercise-service/src/index.ts",
        "dev:workout": "tsx watch services/workout-service/src/index.ts",
        "dev:program": "tsx watch services/program-service/src/index.ts",
        "dev:media": "tsx watch services/media-service/src/index.ts",
        "dev:cache": "tsx watch services/cache-service/src/index.ts",
        "dev:audit": "tsx watch services/audit-service/src/index.ts",
        "dev:error": "tsx watch services/error-service/src/index.ts",
        "dev:notification": "tsx watch services/notification-service/src/index.ts",
        "dev:permission": "tsx watch services/permission-service/src/index.ts",
        "dev:content": "tsx watch services/content-service/src/index.ts",
        "dev:payment": "tsx watch services/payment-service/src/index.ts",
        "dev:settings": "tsx watch services/settings-service/src/index.ts",
        "dev:analytics": "tsx watch services/analytics-service/src/index.ts",
        "dev:data-lifecycle": "tsx watch services/data-lifecycle-service/src/index.ts",
        "dev:cross-domain": "tsx watch services/cross-domain-service/src/index.ts",
        "dev:physics": "tsx watch services/physics-analysis-service/src/index.ts",
        "build": "npm run build:api && npm run build:frontend && npm run build:services",
        "build:frontend": "vite build --config frontend/vite.config.ts",
        "build:api": "tsc --project api/tsconfig.json && tsc-alias --project api/tsconfig.json",
        "build:services": "npm-run-all --parallel build:*-service",
        "build:core": "npm-run-all --parallel build:auth-service build:user-service build:exercise-service build:workout-service build:program-service",
        "build:analytics-service": "tsc --project services/analytics-service/tsconfig.json",
        "build:audit-service": "tsc --project services/audit-service/tsconfig.json",
        "build:auth-service": "tsc --project services/auth-service/tsconfig.json",
        "build:cache-service": "tsc --project services/cache-service/tsconfig.json",
        "build:content-service": "tsc --project services/content-service/tsconfig.json",
        "build:cross-domain-service": "tsc --project services/cross-domain-service/tsconfig.json",
        "build:data-lifecycle-service": "tsc --project services/data-lifecycle-service/tsconfig.json",
        "build:error-service": "tsc --project services/error-service/tsconfig.json",
        "build:exercise-service": "tsc --project services/exercise-service/tsconfig.json",
        "build:media-service": "tsc --project services/media-service/tsconfig.json",
        "build:notification-service": "tsc --project services/notification-service/tsconfig.json",
        "build:payment-service": "tsc --project services/payment-service/tsconfig.json",
        "build:permission-service": "tsc --project services/permission-service/tsconfig.json",
        "build:physics-service": "tsc --project services/physics-analysis-service/tsconfig.json",
        "build:program-service": "tsc --project services/program-service/tsconfig.json",
        "build:settings-service": "tsc --project services/settings-service/tsconfig.json",
        "build:user-service": "tsc --project services/user-service/tsconfig.json",
        "build:workout-service": "tsc --project services/workout-service/tsconfig.json",
        "start": "npm-run-all --parallel start:api start:core-services",
        "start:all": "npm-run-all --parallel start:api start:services",
        "start:frontend": "vite preview --config frontend/vite.config.ts",
        "start:api": "node api/dist/main.js",
        "start:services": "npm-run-all --parallel start:*-service",
        "start:core-services": "npm-run-all --parallel start:auth-service start:user-service start:exercise-service start:workout-service start:program-service",
        "start:support-services": "npm-run-all --parallel start:media-service start:cache-service start:audit-service start:error-service start:notification-service",
        "start:auth-service": "node services/auth-service/dist/index.js",
        "start:user-service": "node services/user-service/dist/index.js",
        "start:exercise-service": "node services/exercise-service/dist/index.js",
        "start:workout-service": "node services/workout-service/dist/index.js",
        "start:program-service": "node services/program-service/dist/index.js",
        "start:media-service": "node services/media-service/dist/index.js",
        "start:cache-service": "node services/cache-service/dist/index.js",
        "start:audit-service": "node services/audit-service/dist/index.js",
        "start:error-service": "node services/error-service/dist/index.js",
        "start:notification-service": "node services/notification-service/dist/index.js",
        "start:permission-service": "node services/permission-service/dist/index.js",
        "start:content-service": "node services/content-service/dist/index.js",
        "start:payment-service": "node services/payment-service/dist/index.js",
        "start:settings-service": "node services/settings-service/dist/index.js",
        "start:analytics-service": "node services/analytics-service/dist/index.js",
        "start:data-lifecycle-service": "node services/data-lifecycle-service/dist/index.js",
        "start:cross-domain-service": "node services/cross-domain-service/dist/index.js",
        "start:physics-service": "node services/physics-analysis-service/dist/index.js",
        "lint": "eslint . --ext .ts,.tsx",
        "lint:fix": "eslint . --ext .ts,.tsx --fix",
        "lint:frontend": "eslint frontend --ext .ts,.tsx",
        "lint:api": "eslint api --ext .ts",
        "lint:services": "eslint services --ext .ts",
        "lint:auth-service": "eslint services/auth-service --ext .ts",
        "lint:user-service": "eslint services/user-service --ext .ts",
        "lint:exercise-service": "eslint services/exercise-service --ext .ts",
        "lint:workout-service": "eslint services/workout-service --ext .ts",
        "lint:program-service": "eslint services/program-service --ext .ts",
        "lint:media-service": "eslint services/media-service --ext .ts",
        "lint:cache-service": "eslint services/cache-service --ext .ts",
        "lint:audit-service": "eslint services/audit-service --ext .ts",
        "lint:error-service": "eslint services/error-service --ext .ts",
        "lint:notification-service": "eslint services/notification-service --ext .ts",
        "lint:permission-service": "eslint services/permission-service --ext .ts",
        "lint:content-service": "eslint services/content-service --ext .ts",
        "lint:payment-service": "eslint services/payment-service --ext .ts",
        "lint:settings-service": "eslint services/settings-service --ext .ts",
        "lint:analytics-service": "eslint services/analytics-service --ext .ts",
        "lint:data-lifecycle-service": "eslint services/data-lifecycle-service --ext .ts",
        "lint:cross-domain-service": "eslint services/cross-domain-service --ext .ts",
        "lint:physics-service": "eslint services/physics-analysis-service --ext .ts",
        "test": "vitest",
        "test:ui": "vitest --ui",
        "test:coverage": "vitest --coverage",
        "test:frontend": "vitest --config frontend/vitest.config.ts",
        "test:api": "vitest --config api/vitest.config.ts",
        "test:services": "npm-run-all --parallel test:*-service",
        "test:core-services": "npm-run-all --parallel test:auth-service test:user-service test:exercise-service test:workout-service",
        "test:auth-service": "vitest --config services/auth-service/vitest.config.ts",
        "test:user-service": "vitest --config services/user-service/vitest.config.ts",
        "test:exercise-service": "vitest --config services/exercise-service/vitest.config.ts",
        "test:workout-service": "vitest --config services/workout-service/vitest.config.ts",
        "test:program-service": "vitest --config services/program-service/vitest.config.ts",
        "test:media-service": "vitest --config services/media-service/vitest.config.ts",
        "test:cache-service": "vitest --config services/cache-service/vitest.config.ts",
        "test:audit-service": "vitest --config services/audit-service/vitest.config.ts",
        "test:error-service": "vitest --config services/error-service/vitest.config.ts",
        "test:notification-service": "vitest --config services/notification-service/vitest.config.ts",
        "test:permission-service": "vitest --config services/permission-service/vitest.config.ts",
        "test:content-service": "vitest --config services/content-service/vitest.config.ts",
        "test:payment-service": "vitest --config services/payment-service/vitest.config.ts",
        "test:settings-service": "vitest --config services/settings-service/vitest.config.ts",
        "test:analytics-service": "vitest --config services/analytics-service/vitest.config.ts",
        "test:data-lifecycle-service": "vitest --config services/data-lifecycle-service/vitest.config.ts",
        "test:cross-domain-service": "vitest --config services/cross-domain-service/vitest.config.ts",
        "test:physics-service": "vitest --config services/physics-analysis-service/vitest.config.ts",
        "clean": "rimraf */dist services/*/dist coverage .nyc_output",
        "clean:frontend": "rimraf frontend/dist frontend/.vite",
        "clean:api": "rimraf api/dist",
        "clean:services": "rimraf services/*/dist",
        "clean:auth-service": "rimraf services/auth-service/dist",
        "clean:user-service": "rimraf services/user-service/dist",
        "clean:exercise-service": "rimraf services/exercise-service/dist",
        "clean:workout-service": "rimraf services/workout-service/dist",
        "clean:program-service": "rimraf services/program-service/dist",
        "clean:media-service": "rimraf services/media-service/dist",
        "clean:cache-service": "rimraf services/cache-service/dist",
        "clean:audit-service": "rimraf services/audit-service/dist",
        "clean:error-service": "rimraf services/error-service/dist",
        "clean:notification-service": "rimraf services/notification-service/dist",
        "clean:permission-service": "rimraf services/permission-service/dist",
        "clean:content-service": "rimraf services/content-service/dist",
        "clean:payment-service": "rimraf services/payment-service/dist",
        "clean:settings-service": "rimraf services/settings-service/dist",
        "clean:analytics-service": "rimraf services/analytics-service/dist",
        "clean:data-lifecycle-service": "rimraf services/data-lifecycle-service/dist",
        "clean:cross-domain-service": "rimraf services/cross-domain-service/dist",
        "clean:physics-service": "rimraf services/physics-analysis-service/dist",
        "type-check": "tsc --noEmit",
        "type-check:frontend": "tsc --noEmit --project frontend/tsconfig.json",
        "type-check:api": "tsc --noEmit --project api/tsconfig.json",
        "type-check:services": "npm-run-all --parallel type-check:*-service",
        "type-check:auth-service": "tsc --noEmit --project services/auth-service/tsconfig.json",
        "type-check:user-service": "tsc --noEmit --project services/user-service/tsconfig.json",
        "type-check:exercise-service": "tsc --noEmit --project services/exercise-service/tsconfig.json",
        "type-check:workout-service": "tsc --noEmit --project services/workout-service/tsconfig.json",
        "format": "prettier --write .",
        "format:check": "prettier --check .",
        "install:all": "npm install",
        "install:clean": "npm run clean && rm -rf node_modules package-lock.json && npm install",
        "check:workspaces": "node -e \"const fs=require('fs'); const dirs=['frontend','api']; dirs.forEach(d=>!fs.existsSync(d)&&console.warn('Missing directory:',d));\"",
        "check:services": "node -e \"const fs=require('fs'),path=require('path'); const services=fs.readdirSync('services').filter(d=>fs.statSync(path.join('services',d)).isDirectory()); console.log('Available services:', services.join(', '));\"",
        "deps:check": "npm-check-updates",
        "deps:update": "npm-check-updates -u && npm install",
        "deps:audit": "npm audit && npm audit fix",
        "docker:build": "docker-compose build",
        "docker:up": "docker-compose up -d",
        "docker:down": "docker-compose down",
        "docker:restart": "docker-compose restart",
        "docker:logs": "docker-compose logs -f",
        "docker:clean": "docker-compose down -v --remove-orphans && docker system prune -f",
        "health:check": "curl -f http://localhost:8000/health || exit 1",
        "health:services": "npm-run-all --parallel health:*-service",
        "generate:env": "node scripts/generate-env.js",
        "generate:docs": "typedoc --out docs .",
        "analyze:bundle": "npm run build:frontend && npx vite-bundle-analyzer frontend/dist",
        "security:check": "npm audit && npx better-npm-audit audit",
        "precommit": "npm run lint && npm run type-check && npm run test",
        "prepare": "husky install || true",
        "prisma:merge": "node prisma/scripts/merge-schema.js",
        "prisma:build": "tsx prisma/scripts/generate.ts",
        "prisma:generate": "npm run prisma:merge && prisma generate",
        "prisma:format": "prisma format",
        "prisma:validate": "prisma validate",
        "prisma:migrate": "npm run prisma:generate && prisma migrate dev",
        "prisma:migrate:prod": "npm run prisma:generate && prisma migrate deploy",
        "prisma:migrate:reset": "prisma migrate reset",
        "prisma:seed": "tsx prisma/seed/seed.ts",
        "prisma:studio": "prisma studio",
        "prisma:push": "npm run prisma:generate && prisma db push",
        "db:reset": "npm run prisma:migrate:reset && npm run prisma:seed",
        "db:setup": "npm run prisma:migrate && npm run prisma:seed"
    },
    "prisma": {
        "seed": "tsx prisma/seed/seed.ts"
    },
    "dependencies": {
        "jose": "^5.0.0",
        "zod": "^3.22.0",
        "tslib": "^2.6.2"
    },
    "devDependencies": {
        "@types/node": "^20.10.6",
        "@typescript-eslint/eslint-plugin": "^7.0.0",
        "@typescript-eslint/parser": "^7.0.0",
        "@vitejs/plugin-react": "^4.0.0",
        "@vitest/ui": "^1.6.0",
        "better-npm-audit": "^3.7.3",
        "concurrently": "^9.1.2",
        "cross-env": "^7.0.3",
        "dotenv-cli": "^8.0.0",
        "eslint": "^8.57.0",
        "eslint-plugin-import": "^2.29.0",
        "eslint-plugin-react": "^7.33.0",
        "eslint-plugin-react-hooks": "^4.6.0",
        "husky": "^8.0.3",
        "npm-check-updates": "^18.0.1",
        "npm-run-all": "^4.1.5",
        "postcss": "^8.4.0",
        "prettier": "^3.0.0",
        "prettier-plugin-tailwindcss": "^0.5.0",
        "react": "^18.2.0",
        "react-dom": "^18.2.0",
        "rimraf": "^5.0.0",
        "tailwindcss": "^3.3.0",
        "tsc-alias": "^1.8.0",
        "tsx": "^4.0.0",
        "typedoc": "^0.25.0",
        "typescript": "^5.4.0",
        "vite": "^5.0.0",
        "vite-bundle-analyzer": "^0.7.0",
        "vitest": "^1.6.0"
    },
    "engines": {
        "node": ">=18.0.0",
        "npm": ">=8.0.0"
    },
    "repository": {
        "type": "git",
        "url": "https://github.com/your-org/motriforge.git"
    },
    "author": "MōtriForge Team",
    "license": "MIT",
    "volta": {
        "node": "20.10.0",
        "npm": "10.2.3"
    }
}