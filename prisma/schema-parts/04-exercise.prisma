// =====================================
// EXERCISE MANAGEMENT
// =====================================

model Exercise {
  id                String   @id @default(cuid())
  name              String   @unique
  description       String
  instructions      String
  notes             String?
  difficultyLevelId String   @map("difficulty_level_id")
  visibilityId      String   @map("visibility_id")
  isActive          Boolean  @default(true) @map("is_active")
  createdAt         DateTime @default(now()) @map("created_at")
  updatedAt         DateTime @updatedAt @map("updated_at")
  createdBy         String?  @map("created_by") // Allow null for system data

  // Relations
  difficultyLevel      DifficultyLevel        @relation(fields: [difficultyLevelId], references: [id], map: "exercise_difficulty_level_fkey")
  visibility           Visibility             @relation(fields: [visibilityId], references: [id], map: "exercise_visibility_fkey")
  createdByUser        User?                  @relation("ExerciseCreatedBy", fields: [createdBy], references: [id], map: "exercise_created_by_fkey")
  categories           ExerciseCategory[]
  tags                 ExerciseTag[]
  muscleTargets        ExerciseMuscleTarget[]
  equipment            ExerciseEquipment[]
  media                ExerciseMedia[]
  exerciseInstructions ExerciseInstruction[]

  @@map("exercise")
}

model ExerciseCategory {
  exerciseId String   @map("exercise_id")
  categoryId String   @map("category_id")
  isPrimary  Boolean  @default(false) @map("is_primary")
  isActive   Boolean  @default(true) @map("is_active")
  createdAt  DateTime @default(now()) @map("created_at")
  createdBy  String?  @map("created_by") // Allow null for system data

  // Relations
  exercise      Exercise @relation(fields: [exerciseId], references: [id], onDelete: Cascade, map: "exercise_category_exercise_fkey")
  category      Category @relation(fields: [categoryId], references: [id], map: "exercise_category_category_fkey")
  createdByUser User?    @relation("ExerciseCategoryCreatedBy", fields: [createdBy], references: [id], map: "exercise_category_created_by_fkey")

  @@id([exerciseId, categoryId])
  @@map("exercise_category")
}

model ExerciseTag {
  exerciseId String   @map("exercise_id")
  tagId      String   @map("tag_id")
  isActive   Boolean  @default(true) @map("is_active")
  createdAt  DateTime @default(now()) @map("created_at")
  createdBy  String?  @map("created_by") // Allow null for system data

  // Relations
  exercise      Exercise @relation(fields: [exerciseId], references: [id], onDelete: Cascade, map: "exercise_tag_exercise_fkey")
  tag           Tag      @relation(fields: [tagId], references: [id], map: "exercise_tag_tag_fkey")
  createdByUser User?    @relation("ExerciseTagCreatedBy", fields: [createdBy], references: [id], map: "exercise_tag_created_by_fkey")

  @@id([exerciseId, tagId])
  @@map("exercise_tag")
}

model ExerciseMuscleTarget {
  id         String     @id @default(cuid())
  exerciseId String     @map("exercise_id")
  muscleId   String     @map("muscle_id")
  targetType TargetType @map("target_type")
  intensity  Int
  isActive   Boolean    @default(true) @map("is_active")
  createdAt  DateTime   @default(now()) @map("created_at")
  createdBy  String?    @map("created_by") // Allow null for system data

  // Relations
  exercise      Exercise @relation(fields: [exerciseId], references: [id], onDelete: Cascade, map: "exercise_muscle_target_exercise_fkey")
  muscle        Muscle   @relation(fields: [muscleId], references: [id], map: "exercise_muscle_target_muscle_fkey")
  createdByUser User?    @relation("ExerciseMuscleTargetCreatedBy", fields: [createdBy], references: [id], map: "exercise_muscle_target_created_by_fkey")

  @@map("exercise_muscle_target")
}

model ExerciseEquipment {
  exerciseId  String   @map("exercise_id")
  equipmentId String   @map("equipment_id")
  isRequired  Boolean  @default(true) @map("is_required")
  usageNotes  String?  @map("usage_notes")
  isActive    Boolean  @default(true) @map("is_active")
  createdAt   DateTime @default(now()) @map("created_at")
  createdBy   String?  @map("created_by") // Allow null for system data

  // Relations
  exercise      Exercise  @relation(fields: [exerciseId], references: [id], onDelete: Cascade, map: "exercise_equipment_exercise_fkey")
  equipment     Equipment @relation(fields: [equipmentId], references: [id], map: "exercise_equipment_equipment_fkey")
  createdByUser User?     @relation("ExerciseEquipmentCreatedBy", fields: [createdBy], references: [id], map: "exercise_equipment_created_by_fkey")

  @@id([exerciseId, equipmentId])
  @@map("exercise_equipment")
}
