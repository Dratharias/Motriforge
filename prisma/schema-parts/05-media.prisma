// =====================================
// MEDIA MANAGEMENT
// =====================================

model MediaType {
  id               String   @id @default(cuid())
  name             String   @unique
  description      String?
  allowedMimeTypes Json     @map("allowed_mime_types") // JSON array of strings
  maxFileSizeBytes BigInt   @map("max_file_size_bytes")
  isActive         Boolean  @default(true) @map("is_active")
  createdAt        DateTime @default(now()) @map("created_at")
  createdBy        String?  @map("created_by") // Allow null for system data

  // Relations
  createdByUser User?   @relation("MediaTypeCreatedBy", fields: [createdBy], references: [id], map: "media_type_created_by_fkey")
  media         Media[]

  @@map("media_type")
}

model Media {
  id            String   @id @default(cuid())
  filename      String
  url           String   @unique
  mediaTypeId   String   @map("media_type_id")
  mimeType      String   @map("mime_type")
  fileSizeBytes BigInt   @map("file_size_bytes")
  fileHash      String?  @map("file_hash")
  visibilityId  String   @map("visibility_id")
  isActive      Boolean  @default(true) @map("is_active")
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @updatedAt @map("updated_at")
  createdBy     String?  @map("created_by") // Allow null for system data

  // Relations
  mediaType     MediaType        @relation(fields: [mediaTypeId], references: [id], map: "media_media_type_fkey")
  visibility    Visibility       @relation(fields: [visibilityId], references: [id], map: "media_visibility_fkey")
  createdByUser User?            @relation("MediaCreatedBy", fields: [createdBy], references: [id], map: "media_created_by_fkey")
  tags          MediaTag[]
  metadata      MediaMetadata?
  exercises     ExerciseMedia[]
  workouts      WorkoutMedia[]
  programs      ProgramMedia[]
  equipment     EquipmentMedia[]

  @@map("media")
}

model MediaTag {
  mediaId   String   @map("media_id")
  tagId     String   @map("tag_id")
  isActive  Boolean  @default(true) @map("is_active")
  createdAt DateTime @default(now()) @map("created_at")
  createdBy String?  @map("created_by") // Allow null for system data

  // Relations
  media         Media @relation(fields: [mediaId], references: [id], onDelete: Cascade, map: "media_tag_media_fkey")
  tag           Tag   @relation(fields: [tagId], references: [id], map: "media_tag_tag_fkey")
  createdByUser User? @relation("MediaTagCreatedBy", fields: [createdBy], references: [id], map: "media_tag_created_by_fkey")

  @@id([mediaId, tagId])
  @@map("media_tag")
}

model MediaMetadata {
  id              String   @id @default(cuid())
  mediaId         String   @unique @map("media_id")
  metadata        Json // JSON object for flexible metadata
  widthPixels     Int?     @map("width_pixels")
  heightPixels    Int?     @map("height_pixels")
  durationSeconds Int?     @map("duration_seconds")
  isActive        Boolean  @default(true) @map("is_active")
  createdAt       DateTime @default(now()) @map("created_at")
  createdBy       String?  @map("created_by") // Allow null for system data

  // Relations
  media         Media @relation(fields: [mediaId], references: [id], onDelete: Cascade, map: "media_metadata_media_fkey")
  createdByUser User? @relation("MediaMetadataCreatedBy", fields: [createdBy], references: [id], map: "media_metadata_created_by_fkey")

  @@map("media_metadata")
}

model ExerciseMedia {
  exerciseId String       @map("exercise_id")
  mediaId    String       @map("media_id")
  purpose    MediaPurpose
  orderIndex Int          @default(0) @map("order_index")
  isActive   Boolean      @default(true) @map("is_active")
  createdAt  DateTime     @default(now()) @map("created_at")
  createdBy  String?      @map("created_by") // Allow null for system data

  // Relations
  exercise      Exercise @relation(fields: [exerciseId], references: [id], onDelete: Cascade, map: "exercise_media_exercise_fkey")
  media         Media    @relation(fields: [mediaId], references: [id], map: "exercise_media_media_fkey")
  createdByUser User?    @relation("ExerciseMediaCreatedBy", fields: [createdBy], references: [id], map: "exercise_media_created_by_fkey")

  @@id([exerciseId, mediaId])
  @@map("exercise_media")
}

model EquipmentMedia {
  equipmentId String       @map("equipment_id")
  mediaId     String       @map("media_id")
  purpose     MediaPurpose
  orderIndex  Int          @default(0) @map("order_index")
  isActive    Boolean      @default(true) @map("is_active")
  createdAt   DateTime     @default(now()) @map("created_at")
  createdBy   String?      @map("created_by") // Allow null for system data

  // Relations
  equipment     Equipment @relation(fields: [equipmentId], references: [id], onDelete: Cascade, map: "equipment_media_equipment_fkey")
  media         Media     @relation(fields: [mediaId], references: [id], map: "equipment_media_media_fkey")
  createdByUser User?     @relation("EquipmentMediaCreatedBy", fields: [createdBy], references: [id], map: "equipment_media_created_by_fkey")

  @@id([equipmentId, mediaId])
  @@map("equipment_media")
}
